version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: retail_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d retail_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  airflow_scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW_HOME: /opt/airflow
      AIRFLOW_UID: 50000 # To match local user if permissions issues arise
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://user:password@postgres:5432/retail_db # For Airflow metadata
      # Database connection for your data scripts (not Airflow metadata DB)
      PG_HOST: postgres
      PG_DB: retail_db
      PG_USER: user
      PG_PASSWORD: password
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./sql:/opt/airflow/sql
      - ./data:/opt/airflow/data
      - airflow_logs:/opt/airflow/logs
    command: scheduler

  airflow_webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW_HOME: /opt/airflow
      AIRFLOW_UID: 50000
      AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://user:password@postgres:5432/retail_db
      PG_HOST: postgres
      PG_DB: retail_db
      PG_USER: user
      PG_PASSWORD: password
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./sql:/opt/airflow/sql
      - ./data:/opt/airflow/data
      - airflow_logs:/opt/airflow/logs
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
  airflow_logs:
